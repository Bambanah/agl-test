{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private http: HttpClient) {}\n\n  // Display loading icon when fetching data\n  loading = true;\n\n  // Initialise cats array\n  cats: Object = {\n    Male: [],\n    Female: [],\n  };\n\n  ngOnInit() {\n    // URL of json endpoint\n    const url = 'http://agl-developer-test.azurewebsites.net/people.json';\n\n    // Initialise people array so that we can iterate over\n    // it, since the response will be an Object\n    let people: any = [];\n\n    // Http request to fetch JSON data\n    this.http.get(url).subscribe((res) => {\n      // Object -> Array\n      people = res;\n\n      // Extract all cats from json data\n      people.forEach((person: any) => {\n        // Only interested in people with pets\n        if (person.pets) {\n          person.pets.forEach((pet: any) => {\n            // Only save cats\n            if (pet.type == 'Cat') {\n              // If a cat is found, add it to the relevant gender array\n              this.cats[person.gender].push(pet.name);\n            }\n          });\n        }\n      });\n\n      // Sort male and female arrays\n      this.cats['Male'].sort();\n      this.cats['Female'].sort();\n\n      // Data loaded\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"this.loading; else elseTemplate\">\n    <app-loading></app-loading>\n  </ng-container>\n  <ng-template #elseTemplate>\n    <div class=\"content\">\n      <h1>Cool Cats and Kittens</h1>\n\n      <h2>Male</h2>\n      <ul>\n        <li *ngFor=\"let cat of cats['Male']\">{{ cat }}</li>\n      </ul>\n\n      <h2>Female</h2>\n      <ul>\n        <li *ngFor=\"let cat of cats['Female']\">{{ cat }}</li>\n      </ul>\n    </div>\n  </ng-template>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoadingComponent } from './loading/loading.component';\n\n@NgModule({\n  declarations: [AppComponent, LoadingComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"spinner-container\">\n  <div class=\"spinner\">\n    <div class=\"bounce1\"></div>\n    <div class=\"bounce2\"></div>\n    <div class=\"bounce3\"></div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}